6
##start
start 1 0
##end
end 1 0
1 1 0
2 1 0
3 1 0
4 1 0
5 1 0
6 1 0
7 1 0
8 1 0
9 1 0
10 1 0
11 1 0
12 1 0
13 1 0
14 1 0
15 1 0
16 1 0
17 1 0
start-1
1-2
2-3
3-4
4-5
5-end
2-6
6-7
7-8
8-9
9-end
start-10
10-11
11-12
12-13
13-3
start-14
14-15
15-16
16-17
17-4
# If the overwriting is fixed from augmentation 3, it may result in less optimal path selection for some cases. Sometimes over-writing can result in finding shorter paths, creating a trade-off. Are both case 3 and 4 handled?
# Ideally finds 2 paths, 7 nodes each. Otherwise, may find path of 7, and path of 8 nodes
# Here is the number of lines required: 9
