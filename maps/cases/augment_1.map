30
##start
start 0 4
##end
end 13 4
1 1 2
2 11 2
3 0 1
4 1 1
5 2 1
6 3 1
7 4 1
8 5 1
9 6 1
10 7 1
11 8 1
12 9 1
13 10 1
14 11 1
15 1 3
16 2 3
17 3 3
18 4 3
19 5 3
20 6 3
21 7 3
22 8 3
23 9 3
24 10 3
25 11 3
26 12 3
27 1 6
28 2 6
29 3 6
30 4 6
31 5 6
32 6 6
33 7 6
34 8 6
35 9 6
36 10 6
37 11 6
38 12 6
39 0 7
40 1 7
41 2 7
42 3 7
43 4 7
44 5 7
45 6 7
46 7 7
47 8 7
48 9 7
49 10 7
50 11 7
51 1 5
52 2 5
53 3 5
54 4 5
55 5 5
56 6 5
57 7 5
58 8 5
59 9 5
60 10 5
61 11 5
62 12 5
start-1
1-2
2-end
start-3
3-4
4-5
5-6
6-7
7-8
8-9
9-10
10-11
11-12
12-13
13-14
14-2
1-15
15-16
16-17
17-18
18-19
19-20
20-21
21-22
22-23
23-24
24-25
25-26
26-end
start-27
27-28
28-29
29-30
30-31
31-32
32-33
33-34
34-35
35-36
36-37
37-38
38-end
start-39
39-40
40-41
41-42
42-43
43-44
44-45
45-46
46-47
47-48
48-49
49-50
50-38
27-51
51-52
52-53
53-54
54-55
55-56
56-57
57-58
58-59
59-60
60-61
61-62
62-end
#This case checks whether the algorithms stops too early. Path lengths go from 32->22->23->21
#         3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14
#        /                                                 |
#       /    1 ------------------------------------------- 2 ---------
#      |   / |                                                         \
#      |  /  15 - 16 - 17 - 18 - 19 - 20 - 21 - 22 - 23 - 24 - 25 - 26  \
#      | /                                                            \  |
#    start                                                             end
#      | \                                                            /  |
#      |  \  51 - 52 - 53 - 54 - 55 - 56 - 57 - 58 - 59 - 60 - 61 - 62  /
#      |   \ |                                                        /
#       \   27 - 28 - 29 - 30 - 31 - 32 - 33 - 34 - 35 - 36 - 37 - 38
#        \                                                         /
#         39 - 40 - 41 - 42 - 43 - 44 - 45 - 46 - 47 - 48 - 49 - 50
#     
#Here is the number of lines required: 21
