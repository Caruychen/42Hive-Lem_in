30
##start
start 1 0
##end
end 10 0
1 1 0
2 1 0
3 1 0
4 1 0
5 1 0
6 1 0
7 1 0
8 1 0
9 1 0
10 1 0
11 1 0
12 1 0
13 1 0
14 1 0
15 1 0
16 1 0
17 1 0
18 1 0
19 1 0
20 1 0
21 1 0
22 1 0
23 1 0
24 1 0
25 1 0
26 1 0
27 1 0
28 1 0
29 1 0
30 1 0
31 1 0
32 1 0
33 1 0
34 1 0
35 1 0
36 1 0
37 1 0
38 1 0
39 1 0
40 1 0
41 1 0
42 1 0
43 1 0
44 1 0
45 1 0
46 1 0
47 1 0
48 1 0
49 1 0
50 1 0
51 1 0
52 1 0
53 1 0
54 1 0
55 1 0
56 1 0
57 1 0
58 1 0
59 1 0
60 1 0
61 1 0
62 1 0
start-1
1-2
2-end
start-3
3-4
4-5
5-6
6-7
7-8
8-9
9-10
10-11
11-12
12-13
13-14
14-2
1-15
15-16
16-17
17-18
18-19
19-20
20-21
21-22
22-23
23-24
24-25
25-26
26-end
start-27
27-28
28-29
29-30
30-31
31-32
32-33
33-34
34-35
35-36
36-37
37-38
38-end
start-39
39-40
40-41
41-42
42-43
43-44
44-45
45-46
46-47
47-48
48-49
49-50
50-38
27-51
51-52
52-53
53-54
54-55
55-56
56-57
57-58
58-59
59-60
60-61
61-62
62-end
#This case checks whether the algorithms stops too early. Path lengths go from 32->22->23->21
#Here is the number of lines required: 21
